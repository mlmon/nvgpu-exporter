name: Release

on:
  push:
    tags:
      - 'v*'

env:
  KO_DOCKER_REPO: ghcr.io/${{ github.repository }}
  COMMIT: ${{ github.sha }}

permissions:
  contents: write
  packages: write

jobs:
  release-containers:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - goos: linux
            goarch: amd64
            cc: gcc                 # native gcc is fine for amd64 on ubuntu-latest
            platform: linux/amd64
          - goos: linux
            goarch: arm64
            cc: aarch64-linux-gnu-gcc
            platform: linux/arm64

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v5.3.0
      with:
        go-version: '1.25.1'
        cache: true

    - name: Cache cross-compilation tools
      id: cache-compiler
      uses: actions/cache@v4
      with:
        path: |
          /usr/bin/aarch64-linux-gnu-*
          /usr/bin/x86_64-linux-gnu-*
          /usr/aarch64-linux-gnu
          /usr/x86_64-linux-gnu
        key: ${{ runner.os }}-cross-compile-${{ hashFiles('.github/workflows/release.yml') }}

    - name: Install cross compiler (if needed)
      if: matrix.cc == 'aarch64-linux-gnu-gcc' && steps.cache-compiler.outputs.cache-hit != 'true'
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc-aarch64-linux-gnu

    - name: Set up ko
      uses: ko-build/setup-ko@v0.9

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract tag name
      id: extract_tag
      run: echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Extract short SHA
      id: extract_sha
      run: echo "short_sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

    - name: Extract version (strip v prefix)
      id: extract_version
      run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

    - name: Build and push with ko
      env:
        CGO_ENABLED: "1"
        CC: ${{ matrix.cc }}
        VERSION: ${{ steps.extract_version.outputs.version }}
        COMMIT: ${{ steps.extract_sha.outputs.short_sha }}
      run: |
        # Verify toolchain in logs
        $CC --version || true
        go env
        echo "Building for $GOOS/$GOARCH with CC=$CC"
        ko build . \
          --platform=${{ matrix.platform }} \
          --base-import-paths \
          --tags=${{ steps.extract_tag.outputs.tag }},${{ steps.extract_sha.outputs.short_sha }},latest \
          --image-label=org.opencontainers.image.source=https://github.com/${{ github.repository }} \
          --image-label=org.opencontainers.image.version=${{ steps.extract_version.outputs.version }} \
          --image-label=org.opencontainers.image.revision=${{ github.sha }}